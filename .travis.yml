language: python

# We don't actually use the Travis Python, but this keeps it organized.
# The test matrix really uses the latest Miniconda for Py2 or Py3,
# and we're "fooling" Travis into doing this for us.
matrix:
    include:
    - os: linux
      dist: trusty
      env: TOXENV=3
    - os: osx 
      osx_image: xcode8
      language: generic
      env: TOXENV=3
    - os: osx
      osx_image: xcode7.2
      language: generic
      env: TOXENV=3

sudo: true

notifications:
    email: false

install: 
    - if [ "$TRAVIS_OS_NAME" == "linux" -a "$TOXENV" == "3" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" -a "$TOXENV" == "3" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    - conda config --add channels conda-forge
    - conda config --add channels defaults
    - conda config --add channels r
    - conda config --add channels bioconda
    - conda install gcc pybind11
    #- conda install htslib==1.3.2 #Attempt pinning
    - conda install -c bioconda libsequence
script:
    - export LD_LIBRARY_PATH=$HOME/miniconda/lib
    - export CPPFLAGS="-I$HOME/miniconda/include $CPPFLAGS"
    - export LDFLAGS="-L$HOME/miniconda/lib $LDFLAGS"
    - CC=gcc CXX=g++ python setup.py build_ext -i --gcc
    - python -m unittest discover tests
